# Generated by Django 2.2.14 on 2020-11-30 19:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('plugins', '0002_permission_stores_granted'),
        ('store', '0001_initial'),
        ('vendor', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0002_auto_20201130_1948'),
    ]

    operations = [
        migrations.AddField(
            model_name='store',
            name='alerts',
            field=models.ManyToManyField(blank=True, related_name='alerts', to='vendor.Alert'),
        ),
        migrations.AddField(
            model_name='store',
            name='campaigns',
            field=models.ManyToManyField(blank=True, related_name='campaigns', to='store.Campaign'),
        ),
        migrations.AddField(
            model_name='store',
            name='carousel',
            field=models.ManyToManyField(blank=True, related_name='carousel', to='store.CarouselItem'),
        ),
        migrations.AddField(
            model_name='store',
            name='coupons',
            field=models.ManyToManyField(blank=True, related_name='coupon', to='store.Coupon'),
        ),
        migrations.AddField(
            model_name='store',
            name='currency',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='store.Currency'),
        ),
        migrations.AddField(
            model_name='store',
            name='customers',
            field=models.ManyToManyField(blank=True, related_name='customers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='store',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='accounts.Merchant'),
        ),
        migrations.AddField(
            model_name='store',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, related_name='payment_methods', to='store.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='store',
            name='platforms',
            field=models.ManyToManyField(blank=True, related_name='platforms', to='store.Social'),
        ),
        migrations.AddField(
            model_name='store',
            name='plugins',
            field=models.ManyToManyField(blank=True, to='plugins.Plugin'),
        ),
        migrations.AddField(
            model_name='store',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='products', to='store.Product'),
        ),
        migrations.AddField(
            model_name='store',
            name='staff_accounts',
            field=models.ManyToManyField(default=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='accounts.Merchant'), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='social',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Store'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='store.Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='colors',
            field=models.ManyToManyField(blank=True, to='store.ColorVariant'),
        ),
        migrations.AddField(
            model_name='product',
            name='sizes',
            field=models.ManyToManyField(blank=True, to='store.SizeVariant'),
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Store'),
        ),
        migrations.AddField(
            model_name='product',
            name='sub_cats',
            field=models.ManyToManyField(blank=True, to='store.Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, limit_choices_to=1, to='store.Tag'),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Store'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Cart'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='issuer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Store'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='payer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coupon',
            name='been_used_by',
            field=models.ManyToManyField(blank=True, related_name='users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coupon',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Store'),
        ),
        migrations.AddField(
            model_name='colorvariant',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Product'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Cart'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Product'),
        ),
        migrations.AddField(
            model_name='cart',
            name='items',
            field=models.ManyToManyField(blank=True, related_name='items', to='store.CartItem'),
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cart',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Store'),
        ),
        migrations.AddField(
            model_name='carouselitem',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store', to='store.Store'),
        ),
        migrations.AddField(
            model_name='campaignitem',
            name='campaign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign', to='store.Campaign'),
        ),
        migrations.AddField(
            model_name='campaignitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Product'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='items',
            field=models.ManyToManyField(blank=True, related_name='items', to='store.CampaignItem'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='platforms',
            field=models.ManyToManyField(blank=True, to='store.Social'),
        ),
    ]
